version: '3.5'

volumes:
  svip_pgdata:
  svip_esdata:
  seqrepo:

services:
  # nginx:
  #   build:
  #     context: ./service_config/nginx
  #     dockerfile: Dockerfile
  #   container_name: tupro_report_nginx
  #   volumes:
  #     - '${PWD}/service_config/nginx/sites/locations.conf:/etc/nginx/locations.conf:ro'
  #     - '${PWD}/service_config/nginx/sites/local.nginx:/etc/nginx/conf.d/tupro_reporting.nginx:ro'
  #   ports:
  #     - '8020:80'
  #   depends_on:
  #     - api
  #     - frontend

  db:
    image: "postgres:11.1"
    shm_size: '2gb'
    restart: always
    volumes:
         - "svip_pgdata:/var/lib/postgresql/data" # for now we're storing pg data to a volume
         - ./svip_db_backups:/backups
         - ./db_config:/docker-entrypoint-initdb.d
    ports:
      - "30432:5432" # FIXME: dev access port, remove later
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDB=${POSTGRES_DB}

  api:
    # image: "svip_api:latest"
    build: ./svip_api
    # restart: always
    volumes:
      - ./svip_api:/app
    ports:
     - "8085:8085"
     - "8889:8889"  # jupyterlab port
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - DJANGO_SU_NAME
      - DJANGO_SU_EMAIL
      - DJANGO_SU_PASSWORD
      - USE_DEV_SERVER=true

  # frontend:
  #   build: ./svip-o-vue
  #   volumes:
  #     - ./svip-o-vue:/app
  #     - /app/node_modules
  #   # starts react in hot-reload mode
  #   # filesystem changes will immediately be reflected in the frontend, which speeds up prototyping a lot
  #   command: bash -c "npm run serve"
  #   restart: 'no'
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     - 'VUE_APP_API_URL=http://localhost:8020/api'
  #   depends_on:
  #     - api
