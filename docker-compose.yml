version: "3.5"

volumes:
  svip_pgdata:
  svip_esdata:
  seqrepo:
  web_built:
  api_static:

services:
  nginx:
    container_name: svip_nginx
    build:
      context: ./service_config/nginx
      dockerfile: Dockerfile
    volumes:
      - "${PWD}/service_config/nginx/shared.conf:/etc/nginx/shared.conf:ro"
      - "${PWD}/service_config/nginx/sites/local.nginx:/etc/nginx/conf.d/svip.nginx:ro"
      - "web_built:/usr/share/nginx/html:ro"
      - "api_static:/usr/share/api_static:ro"
    depends_on:
      - api
      - frontend

  db:
    container_name: svip_db
    image: "postgres:11.1"
    hostname: db
    shm_size: "2gb"
    restart: always
    command: -c 'max_wal_size=2GB'
    ports:
      - "30432:5432" # FIXME: dev access port
    volumes:
      - "svip_pgdata:/var/lib/postgresql/data"
      - ./svip_db_backups:/backups
      - ./service_config/postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDB=${POSTGRES_DB}

  api:
    container_name: svip_api
    # image: "svip_api:latest"
    build: ./svip_api
    # restart: always
    volumes:
      - ./svip_api:/app
      - api_static:/var/staticfiles
    ports:
      - "8085:8085"
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - DJANGO_SU_NAME
      - DJANGO_SU_EMAIL
      - DJANGO_SU_PASSWORD
      - SOCIBP_BASE_URL
      - USE_DEV_SERVER=true

  frontend:
    container_name: svip_frontend
    build:
      context: ./svip-o-vue
      dockerfile: Dockerfile
    volumes:
      - web_built:/web
      - ./svip-o-vue:/app:delegated
      # allows the module's git repo to be accessed in the container, which
      # lets GitRevisionPlugin tag each build with its commit hash, branch, etc.
      - .git/modules/svip-o-vue:/.git/modules/svip-o-vue:delegated,ro
    # # starts react in hot-reload mode
    # # filesystem changes will immediately be reflected in the frontend, which speeds up prototyping a lot
    # command: sh -c "npm run serve"
    command: bash -c "npm ci && npm run build && rm -rf /web/* && cp -R /app/dist/* /web/"
    restart: "no"
    ports:
      - "3000:8080"
    environment:
      - "VUE_APP_API_URL=http://localhost:8085/api/v1/"
    depends_on:
      - api

  redis:
    container_name: svip_redis
    image: "redis:alpine"
