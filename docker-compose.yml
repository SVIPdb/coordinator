version: '3.5'

volumes:
  svip_pgdata:
  svip_esdata:
  seqrepo:
  web_built:
  api_static:

services:
  db:
    image: "postgres:11.1"
    shm_size: '2gb'
    restart: always
    volumes:
         - "svip_pgdata:/var/lib/postgresql/data" # for now we're storing pg data to a volume
         - ./svip_db_backups:/backups
         - ./service_config/postgres:/docker-entrypoint-initdb.d
    ports:
      - "30432:5432" # FIXME: dev access port, remove later
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDB=${POSTGRES_DB}

  api:
    # image: "svip_api:latest"
    build: ./svip_api
    # restart: always
    volumes:
      - ./svip_api:/app
    ports:
     - "8085:8085"
     - "8889:8889"  # jupyterlab port
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - DJANGO_SU_NAME
      - DJANGO_SU_EMAIL
      - DJANGO_SU_PASSWORD
      - SOCIBP_BASE_URL
      - USE_DEV_SERVER=true

  frontend:
    build:
      context: ./svip-o-vue
      dockerfile: Dockerfile
      target: hmr-debug
    volumes:
      - ./svip-o-vue:/app
      - web_built:/web
    # starts react in hot-reload mode
    # filesystem changes will immediately be reflected in the frontend, which speeds up prototyping a lot
    command: sh -c "npm run serve"
    restart: 'no'
    ports:
      - '3000:8080'
    environment:
      - 'VUE_APP_API_URL=http://localhost:8085/api/v1/'
    depends_on:
      - api
