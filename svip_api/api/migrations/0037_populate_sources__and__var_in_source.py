# Generated by Django 2.1.3 on 2019-03-05 11:36

from django.db import migrations, models

new_sources = [
    {'name': 'civic', 'display_name': 'CIViC'},
    {'name': 'oncokb', 'display_name': 'OncoKB'},
    {'name': 'clinvar', 'display_name': 'ClinVar'},
    {'name': 'cosmic', 'display_name': 'COSMIC'},
]


def create_sources(apps, schema_editor):
    # adds sources that may be missing
    Source = apps.get_model('api', 'Source')
    Source.objects.bulk_create([ Source(**s) for s in new_sources ])


def drop_sources(apps, schema_editor):
    Source = apps.get_model('api', 'Source')
    Source.objects.filter(name__in=[x['name'] for x in new_sources]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0036_auto_20190305_1144'),
    ]

    # noinspection SqlWithoutWhere
    operations = [
        migrations.RunPython(create_sources, reverse_code=drop_sources),

        # populate the new variant-to-source cross table from api_assocation
        migrations.RunSQL("""
            insert into  api_variantinsource (variant_id, source_id, variant_url)
            select A.variant_id, (select id from api_source where name=A.source), A.source_url from api_association A
            on conflict do nothing
        """, reverse_sql="""delete from api_variantinsource"""),

        # hook up api_association to the entries in the new cross table
        migrations.RunSQL("""
            update api_association as A
            set variant_in_source_id=(
                select id from api_variantinsource VIS
                where VIS.variant_id=A.variant_id
                and VIS.source_id=(select id from api_source as ApS where ApS.name=A.source)
            )
        """, reverse_sql="""update api_association set variant_in_source_id=null""")
    ]
