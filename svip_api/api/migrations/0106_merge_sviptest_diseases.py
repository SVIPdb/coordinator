# Generated by Django 2.2.4 on 2021-01-26 16:16

import os
from csv import DictReader

from django.db import migrations
from django.db import transaction

import api

APP_DIR = os.path.dirname(api.__file__)
DISEASES_CSV = os.path.join(APP_DIR, "fixtures", "disease-schema-migration", "api_disease_sviptest_2021-01-26-0830.csv")

def merge_diseases(apps, schema_editor):
    """
    Merges in user-created diseases from svip-test, ignoring ones that already exist.
    """
    with transaction.atomic():
        with open(DISEASES_CSV) as fp:
            Disease = apps.get_model('api', 'Disease')

            for rec in DictReader(fp, dialect='excel'):
                if Disease.objects.filter(name=rec['name']).exists():
                    continue

                candidate = Disease(
                    localization=rec['localization'],
                    abbreviation=rec['abbreviation'],
                    name=rec['name'],
                    topo_code=rec['topo_code'],
                    morpho_code=rec['morpho_code'],
                    snomed_code=rec['snomed_code'],
                    snomed_name=rec['snomed_name'],
                    details=rec['details'],
                )
                candidate.save()

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0105_disease_tweaks'),
    ]

    operations = [
        migrations.RunPython(merge_diseases, reverse_code=migrations.RunPython.noop)
    ]
