# Generated by Django 2.1.3 on 2019-02-08 08:46

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0033_add_array_distinct'),
    ]

    operations = [
        # first we need a function that allows us to transform {'civic': null, 'oncokb': null} into ['civic', 'oncokb']
        # this is to get around the fact that alter table's using expression doesn't permit subqueries
        migrations.RunSQL("""
        create or replace function jsonb_keys_to_array(jsonb) returns text[]
          immutable
          language sql
        as
        $$
        SELECT array(select * from jsonb_object_keys($1));
        $$;
        alter function jsonb_keys_to_array(jsonb) owner to postgres;
        """, reverse_sql="drop function jsonb_keys_to_array;"),

        # then, map the jsonb objects to arrays
        migrations.RunSQL("""
            alter table svip_api.public.api_gene alter sources type text[]
            using jsonb_keys_to_array(sources);
            """,
        reverse_sql="""
            alter table svip_api.public.api_gene alter sources type jsonb
            using jsonb_object(
                sources,
                array_fill(null::text, array[array_length(sources, 1)])
            );
            """),

        migrations.RunSQL("""
            alter table svip_api.public.api_variant alter sources type text[]
            using jsonb_keys_to_array(sources);
            """,
        reverse_sql="""
            alter table svip_api.public.api_variant alter sources type jsonb
            using jsonb_object(
                sources,
                array_fill(null::text, array[array_length(sources, 1)])
            );
            """),
    ]
