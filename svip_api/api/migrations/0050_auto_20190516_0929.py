# Generated by Django 2.1.3 on 2019-05-16 09:29

from django.db import migrations, models
import django_db_cascade.deletions
import django_db_cascade.fields


def disease_creation_migrate(reverse=False):
    def populate_diseases(apps, schema_editor):
        Disease = apps.get_model('api', 'Disease')

        if not reverse:
            VariantInSVIP = apps.get_model('api', 'VariantInSVIP')
            for svip_var in VariantInSVIP.objects.all():
                # create disease entries keyed to this candidate, too
                for disease in svip_var.data['diseases']:
                    Disease(svip_variant=svip_var, name=disease['name']).save()
        else:
            Disease.objects.all().delete()

    return populate_diseases





class Migration(migrations.Migration):

    dependencies = [
        ('api', '0049_auto_20190425_1315'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('status', models.TextField(default='Loaded')),
                ('confidence_score', models.IntegerField(default=0)),
                ('svip_variant', django_db_cascade.fields.ForeignKey(on_delete=django_db_cascade.deletions.DB_CASCADE, to='api.VariantInSVIP')),
            ],
            options={
                'db_table': 'svip_disease',
            },
        ),

        migrations.RunPython(code=disease_creation_migrate(), reverse_code=disease_creation_migrate(reverse=True)),

        # 1a. add temporary 'disease_link' field that we'll use to associate samples and curation entries with their
        #  new disease models
        migrations.AddField(
            model_name='sample',
            name='disease_link',
            field=django_db_cascade.fields.ForeignKey(
                on_delete=django_db_cascade.deletions.DB_CASCADE, to='api.Disease', null=True),
        ),
        migrations.AddField(
            model_name='curationentry',
            name='disease_link',
            field=django_db_cascade.fields.ForeignKey(
                on_delete=django_db_cascade.deletions.DB_CASCADE, to='api.Disease', null=True),
        ),

        migrations.AddField(
            model_name='curationentry',
            name='tier_level',
            field=models.TextField(default='n/a', verbose_name='Tier level'),
            preserve_default=False,
        ),
    ]
